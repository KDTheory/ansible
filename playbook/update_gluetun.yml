---
- name: Orchestrate Seedbox and Docker updates
  hosts: localhost
  gather_facts: false
  vars:
    portainer_url: "{{ lookup('env', 'PORTAINER_URL') }}"
    portainer_api_key: "{{ lookup('env', 'PORTAINER_API_KEY') }}"
    users: "{{ lookup('env', 'USERS') | from_json }}"

  tasks:
    - name: Get the Gluetun container port
      command: docker inspect -f '{{"{{"}}range .NetworkSettings.Ports{{"}}"}}{{"{{"}}.{{"}}"}}{{"{{"}}end{{"}}"}}' gluetun
      register: gluetun_port_output
      delegate_to: 192.168.50.115 #portainer

    - name: Extract port number
      set_fact:
        gluetun_port: "{{ gluetun_port_output.stdout | regex_search(':(\\d+)', '\\1') }}"

    - name: Fetch current port from rtorrent.rc for each user
      block:
        - name: Check current port in .rtorrent.rc for user kevin
          command: grep 'port_range = ' /home/kevin/config/rutorrent-kevin/rtorrent/.rtorrent.rc
          register: current_port_kevin
          changed_when: false
          delegate_to: 192.168.50.90

        - name: Check current port in .rtorrent.rc for user alexis
          command: grep 'port_range = ' /home/kevin/config/rutorrent-alexis/rtorrent/.rtorrent.rc
          register: current_port_alexis
          changed_when: false
          delegate_to: 192.168.50.90

        - name: Parse port from rtorrent.rc content for user kevin
          set_fact:
            current_port_kevin_parsed: "{{ current_port_kevin.stdout | regex_search('port_range = (\\d+)-(\\d+)', '\\1') }}"
          when: current_port_kevin is defined and current_port_kevin.stdout != ""

        - name: Parse port from rtorrent.rc content for user alexis
          set_fact:
            current_port_alexis_parsed: "{{ current_port_alexis.stdout | regex_search('port_range = (\\d+)-(\\d+)', '\\1') }}"
          when: current_port_alexis is defined and current_port_alexis.stdout != ""

        - name: Set port_changed for kevin if port is different
          set_fact:
            port_changed_kevin: true
          when: current_port_kevin_parsed != gluetun_port

        - name: Set port_changed for alexis if port is different
          set_fact:
            port_changed_alexis: true
          when: current_port_alexis_parsed != gluetun_port

        - name: Update .rtorrent.rc for user kevin if port has changed
          lineinfile:
            path: /home/kevin/config/rutorrent-kevin/rtorrent/.rtorrent.rc
            regexp: 'port_range = '
            line: "port_range = {{ gluetun_port }}-{{ gluetun_port }}"
          when: port_changed_kevin is defined and port_changed_kevin
          delegate_to: 192.168.50.90

        - name: Update .rtorrent.rc for user alexis if port has changed
          lineinfile:
            path: /home/kevin/config/rutorrent-alexis/rtorrent/.rtorrent.rc
            regexp: 'port_range = '
            line: "port_range = {{ gluetun_port }}-{{ gluetun_port }}"
          when: port_changed_alexis is defined and port_changed_alexis
          delegate_to: 192.168.50.90

    - name: Update stacks with new port if port has changed
      block:
        - name: Update stack for kevin with new port
          uri:
            url: "{{ portainer_url }}/api/stacks/25/update?endpointId=1"
            method: PUT
            headers:
              Authorization: "Bearer {{ portainer_api_key }}"
              Content-Type: "application/json"
            body: '{"env": [{"name": "GLUETUN_PORT", "value": "{{ gluetun_port }}"}]}'
            body_format: json
          register: update_result_kevin
          when: port_changed_kevin is defined and port_changed_kevin
          delegate_to: 192.168.50.115

        - name: Update stack for alexis with new port
          uri:
            url: "{{ portainer_url }}/api/stacks/24/update?endpointId=1"
            method: PUT
            headers:
              Authorization: "Bearer {{ portainer_api_key }}"
              Content-Type: "application/json"
            body: '{"env": [{"name": "GLUETUN_PORT", "value": "{{ gluetun_port }}"}]}'
            body_format: json
          register: update_result_alexis
          when: port_changed_alexis is defined and port_changed_alexis
          delegate_to: 192.168.50.115

        - name: Set restart flag for kevin if stack update has changed
          set_fact:
            stack_restart_required_kevin: true
          when: update_result_kevin.changed

        - name: Set restart flag for alexis if stack update has changed
          set_fact:
            stack_restart_required_alexis: true
          when: update_result_alexis.changed

        - name: Restart stack for kevin if needed
          uri:
            url: "{{ portainer_url }}/api/stacks/25/restart?endpointId=1"
            method: POST
            headers:
              Authorization: "Bearer {{ portainer_api_key }}"
              Content-Type: "application/json"
          when: stack_restart_required_kevin is defined and stack_restart_required_kevin
          delegate_to: 192.168.50.115

        - name: Restart stack for alexis if needed
          uri:
            url: "{{ portainer_url }}/api/stacks/24/restart?endpointId=1"
            method: POST
            headers:
              Authorization: "Bearer {{ portainer_api_key }}"
              Content-Type: "application/json"
          when: stack_restart_required_alexis is defined and stack_restart_required_alexis
          delegate_to: 192.168.50.115
